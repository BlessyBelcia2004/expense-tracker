// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String            @id @default(cuid())
  name          String?
  email         String            @unique
  emailVerified DateTime?
  password      String
  resetToken      String?  @unique
  resetTokenExpiry DateTime?
  image         String?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  expenses      Expense[]
  budgets       Budget[]
  recurringExpenses RecurringExpense[]
  goals         Goal[]
}

model Expense {
  id                String   @id @default(cuid())
  name              String
  amount            Float
  date              DateTime
  description       String?
  category          String
  isRecurring       Boolean  @default(false)
  recurringExpenseId String?
  tags              String[]
  receiptUrl        String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  userId            String
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Budget {
  id        String   @id @default(cuid())
  month     Int
  year      Int
  amount    Float
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, month, year, category])
}

model RecurringExpense {
  id          String    @id @default(cuid())
  name        String
  amount      Float
  category    String
  description String?
  frequency   String
  startDate   DateTime
  endDate     DateTime?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Goal {
  id          String   @id @default(cuid())
  name        String
  targetAmount Float
  currentAmount Float   @default(0)
  startDate   DateTime @default(now())
  targetDate  DateTime
  category    String
  description String?
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
